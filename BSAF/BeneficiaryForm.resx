<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ctxFamailyMemeberMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>32</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7+HPlb+I
        QMO/iEDD38Sgw/r17wUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADn1Lq01K9/w8OQTcPKnGDD17WIw+/i
        0MMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOPK
        qkq5fjD/qWAA/72EOfzv4c9NAAAAAAAAAAAAAAAAAAAAANSvfmXOpGzjsnEb/6lgAP+pYAD/qWAA/6lg
        AP+pYAD/qWAA/7Z4J//Ur3/738SgZfTr3wMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        A4f8AAcH/AAOD/+APh////////////////8=
</value>
  </data>
</root>